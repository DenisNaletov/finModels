document.getElementById("financeForm").addEventListener("submit", async (e) => {
  e.preventDefault();
  const form = e.target;
  const rawData = Object.fromEntries(new FormData(form));

  // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
  const numericFields = [
    "investment",
    "loanPercent",
    "loanTerm",
    "loanHoliday",
    "revenue",
    "revenueGrowthPercent",
    "salaryExpense",
    "rentExpense",
    "suppliesExpense",
    "otherExpense",
    "horizon",
    "variableExpensesValue",
  ];

  numericFields.forEach((key) => {
    rawData[key] = rawData[key] === "" ? null : Number(rawData[key]);
  });

  rawData.variableExpensesIsPercent =
    rawData.variableExpensesIsPercent === "true";

  const data = { ...rawData };

  console.log("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ JSON:", data);
  document.getElementById("result").innerText = "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—á–µ—Ç...";

  try {
    const resp = await fetch("http://localhost:8088/api/finance/calculate", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    });

    if (!resp.ok) throw new Error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
    const result = await resp.json();

    document.getElementById("result").innerHTML = `
        <b>–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –∑–∞ —Å—Ä–æ–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (NP):</b> ${result.totalNetProfit.toFixed(
          2
        )} —Ç—ã—Å ‚ÇΩ<br>
        <b>–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π (ROI):</b> ${result.roi.toFixed(2)}%<br>
        <b>–°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ (PP):</b> ${
          result.paybackMonth > 0
            ? result.paybackMonth + " –º–µ—Å—è—Ü–µ–≤"
            : "–ù–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
        }<br>
        <b>–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–∏–±—ã–ª—å (EBITDA):</b> ${result.ebitda.toFixed(
          2
        )} —Ç—ã—Å ‚ÇΩ<br>
        <b>–î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫ (Cash Flow):</b> ${result.cashFlow.toFixed(
          2
        )} —Ç—ã—Å ‚ÇΩ<br>
        <b>–¢–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ (Break Even):</b> ${
          result.breakEvenMonth > 0
            ? result.breakEvenMonth + " –º–µ—Å—è—Ü–µ–≤"
            : "–ù–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞"
        }
      `;
  } catch (err) {
    document.getElementById("result").innerText =
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ: " + err.message;
  }
});
